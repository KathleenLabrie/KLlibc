                          KL Functions Library
			      KLfunc v1.2.0
			      April 13, 2001

----------------------------------------------------------------------------
Profiles, f(x)

fgauss:
	Gaussian Profile: 
	f(x) = A*exp(-0.5 * ((x-x0/sigma)^2)) + S

		a[0] = S (constant)
		a[1] = A
		a[2] = x0
		a[3] = sigma

	void fgauss(double x, double a[], double *y, double dyda[], int na)

fpolynome:
	Polynomial Profile:
	f(x) = sum( a_i * x^i )  [ 0 < i < na ]

		afunc[i] = x^i

	(use evallfunc to get f(x))

	void fpolynome(double x, double afunc[], int na)
	
-----------------------------------------------------------------------------
Surfaces, f(x1,x2)

fgaussS:
	Gaussian Surface:
	f(x1,x2) = A*exp(-0.5 * ( ((x1-x10)/sig1)^2 + ((x2-x20)/sig2)^2 )) + S

		a[0] = S
		a[1] = A
		a[2] = x10
		a[3] = x20
		a[4] = sig1
		a[5] = sig2

	void fgaussS(double x[], double a[], double *y, double dyda[], int na)

fmoffatS:
	Moffat Surface:
	f(x1,x2) = A*( 1 + ((x1-x10)/alphaX1)^2 + ((x2-x20)/alphaX2)^2 )^beta +
		    + S
		a[0] = S
		a[1] = A
		a[2] = x10
		a[3] = x20
		a[4] = beta
		a[5] = alphaX1
		a[6] = alphaX2
	
	void fmoffatS(double x[], double a[], double *y, double dyda[], int na)

------------------------------------------------------------------------------
Utilities

evalfunc:
	Evaluate a function.

	int evalfunc(double **x, double *yfit, int ndim, unsigned long ndata,
		  double coeff[], int ncoeff, 
	          void (*func)(double [], double[] , double *, double [], int))

evallfunc:
	Evaluate a linear function, f(x) = sum( a_i * afunc_i).  Ndim should be
	set to 1.  'coeff[]' are the a_i.

	int evallfunc(double **x, double *yfit, int ndim, unsigned long ndata,
		  double coeff[], int ncoeff, 
	          void (*func)(double , double[] , int))

------------------------------------------------------------------------------
